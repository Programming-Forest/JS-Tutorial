(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{366:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js의-데이터-타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js의-데이터-타입"}},[t._v("#")]),t._v(" JS의 데이터 타입")]),t._v(" "),a("p",[t._v("모든 프로그래밍 언어는 모두 내장 자료형이 있습니다."),a("br"),t._v("\n그렇지만 이러한 내장 자료형은 언어마다 종종 다르기도 합니다.")]),t._v(" "),a("p",[t._v("그러기 때문에 여기서는 JS의 내장 자료형과,"),a("br"),t._v("\n여기서 사용할 수 있는 속성들에 대해 알아볼 예정입니다.")]),t._v(" "),a("h2",{attrs:{id:"동적-타이핑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#동적-타이핑"}},[t._v("#")]),t._v(" 동적 타이핑")]),t._v(" "),a("p",[t._v("자바스크립트는 느슨한 타입 또는 동적 언어입니다."),a("br"),t._v("\n그러기에 변수 타입을 미리 지정할 필요가 없다는거죠")]),t._v(" "),a("p",[t._v("C언어를 예시로 들면")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 정수형")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 문자형")]),t._v("\n")])])]),a("p",[t._v("다음과 같이 미리 타입을 지정해놓습니다.")]),t._v(" "),a("p",[t._v("하지만 저희가 사용할 JS에서는 다음과 같이 사용합니다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("분명 같은 방법으로 선언했는데 각기 다른 타입이 들어가는 이유는"),a("br"),t._v("\n프로그램이 동작을 하면서 타입이 자동으로 파악되기 때문입니다.")]),t._v(" "),a("h2",{attrs:{id:"변수-선언"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#변수-선언"}},[t._v("#")]),t._v(" 변수 선언")]),t._v(" "),a("p",[t._v("데이터 타입을 이용하기에 앞서, 변수를 선언해야 사용이 가능하겠죠?"),a("br"),t._v("\nJS는 변수를 선언하는 방법이 세가지가 있고, 각기 다른 형태를 지닙니다.")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"#var"}},[t._v("var")]),t._v("(function-scoped)")]),t._v(" "),a("li",[a("a",{attrs:{href:"#let"}},[t._v("let")]),t._v("(block-scoped)")]),t._v(" "),a("li",[a("a",{attrs:{href:"#const"}},[t._v("const")]),t._v("(block-scoped)")]),t._v(" "),a("li",[a("a",{attrs:{href:"#scoped"}},[t._v("function-scoped, block-scoped")])])]),t._v(" "),a("h3",{attrs:{id:"var"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[t._v("#")]),t._v(" var")]),t._v(" "),a("p",[t._v("var 타입은 선언 이후 선택적으로 값 변경이 가능한 형태입니다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("1\n2")])]),t._v(" "),a("p",[t._v("다음과 같이, 값이 변경되는 것을 볼 수 있습니다.")]),t._v(" "),a("h3",{attrs:{id:"let"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let"}},[t._v("#")]),t._v(" let")]),t._v(" "),a("p",[t._v("let 타입 또한 var타입 처럼 선택적으로 값 변경이 가능한 형태입니다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("1\n2")])]),t._v(" "),a("p",[t._v("다음과 같이 값이 변경 되는 것을 볼 수 있습니다.")]),t._v(" "),a("p",[t._v("그러면 var타입과의 차이가 무엇인지 여쭤볼 수 있는데, 이는 밑에서 다루도록 하겠습니다.")]),t._v(" "),a("h3",{attrs:{id:"const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[t._v("#")]),t._v(" const")]),t._v(" "),a("p",[t._v("const 타입은 위에서 변수라 불렀지만, 정확히는 상수에 속합니다."),a("br"),t._v("\n한번 선언하면 값을 재정의 할 수 없는 형태인거죠")]),t._v(" "),a("p",[t._v("그러기에 값을 재정의하려고 할 경우, 에러가 나타나게 됩니다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// VM122:1 Uncaught TypeError: Assignment to constant variable.")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("1\n1")])]),t._v(" "),a("p",[t._v("다음과 같이 에러가 출력되며, 값은 변경되지 않습니다.")]),t._v(" "),a("h3",{attrs:{id:"scoped"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scoped"}},[t._v("#")]),t._v(" scoped")]),t._v(" "),a("p",[t._v("JS에서는 scoped의 형태가 두가지로 존재합니다.")]),t._v(" "),a("ol",[a("li",[t._v("function-scoped")]),t._v(" "),a("li",[t._v("block-scoped")])]),t._v(" "),a("p",[t._v("물론 지금은 이해 잘 안될 것이다. 그러기에 더 배우고나서 다시 한번 더 찾아오는 것을 추천한다.\n그리고 "),a("code",[t._v("let")]),t._v("이랑 "),a("code",[t._v("const")]),t._v("만 사용하면 된다는 것을 기억하면 된다.")]),t._v(" "),a("h4",{attrs:{id:"function-scoped"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-scoped"}},[t._v("#")]),t._v(" function-scoped")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 ~ 10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 이 경우 정상적으로 작동을 한다.")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 그러나 아래의 경우에는 에러가 발생한다.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("counter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("counter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: i is not defined")]),t._v("\n")])])]),a("p",[t._v("말 그대로 "),a("code",[t._v("function-scoped")]),t._v("이기에, scope의 단위가 "),a("code",[t._v("function")]),t._v("일 뿐이다.")]),t._v(" "),a("p",[t._v("그러기에 "),a("code",[t._v("j")]),t._v("의 경우 "),a("code",[t._v("for 반복문")]),t._v("안에서 선언된 값도 그저 밑에서 사용 가능하지만"),a("br"),t._v(" "),a("code",[t._v("i")]),t._v("의 경우 함수 안에서 선언되었기에, 밑에서 사용을 못하고, 에러가 나타날 뿐이다.")]),t._v(" "),a("blockquote",[a("p",[t._v("한줄 요약 : "),a("code",[t._v("var")]),t._v("의 경우, 함수 안에서 선언한 건 함수 안에서만 사용 가능하다. 끝")])]),t._v(" "),a("h4",{attrs:{id:"block-scoped"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#block-scoped"}},[t._v("#")]),t._v(" block-scoped")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 ~ 10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: j is not defined")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("counter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 ~ 1-")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("counter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: i is not defined")]),t._v("\n")])])]),a("p",[t._v("이 경우는 두개 모두 에러가 나타난다.")]),t._v(" "),a("p",[a("code",[t._v("for")]),t._v(" 블럭 안에서 사용된건 "),a("code",[t._v("for")]),t._v(" 안에서만 사용 가능하기 때문이다\n"),a("code",[t._v("function")]),t._v(" 블럭 안에서 사용된건 "),a("code",[t._v("function")]),t._v("안에서만 사용 가능한거기도하고")]),t._v(" "),a("p",[t._v("이처럼 "),a("code",[t._v("{}")]),t._v(" 중괄호로 이루어진 블럭 단위로 "),a("code",[t._v("scope")]),t._v("가 구분이 되어, 변수 사용 범위를 지정해준다.")]),t._v(" "),a("p",[a("code",[t._v("function-scoped")]),t._v("처럼 여러 변수가 나타나지 않기에, 인기가 많은 편이다.")]),t._v(" "),a("h2",{attrs:{id:"기본적인-7가지-타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#기본적인-7가지-타입"}},[t._v("#")]),t._v(" 기본적인 7가지 타입")]),t._v(" "),a("p",[t._v("최신 ECMAScript 표준은 기본적인 7가지의 자료형을 정의합니다.")]),t._v(" "),a("ol",[a("li",[t._v("Boolean")]),t._v(" "),a("li",[t._v("Null")]),t._v(" "),a("li",[t._v("Undefined")]),t._v(" "),a("li",[t._v("Number")]),t._v(" "),a("li",[t._v("String")]),t._v(" "),a("li",[t._v("Symbol")]),t._v(" "),a("li",[t._v("Object")])]),t._v(" "),a("p",[t._v("다음 중 1~6번의 경우 기본 자료형(Primitive)이며, 7번은 별도로 다룬다.")]),t._v(" "),a("h3",{attrs:{id:"기본-타입-primitive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#기본-타입-primitive"}},[t._v("#")]),t._v(" 기본 타입(Primitive)")]),t._v(" "),a("p",[t._v("7번인 "),a("code",[t._v("Object")]),t._v("를 제외한 모든 값은 변경 불가능한 값입니다. (immutable value)")]),t._v(" "),a("p",[t._v("이는 추후 JS-Tutorial이 아닌, 다른 곳에서 설명할 예정이니 기다려주시길 바랍니다 ㅎ..")]),t._v(" "),a("h4",{attrs:{id:"boolean-타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean-타입"}},[t._v("#")]),t._v(" Boolean 타입")]),t._v(" "),a("p",[a("code",[t._v("Boolean")]),t._v("은 논리적인 요소를 뜻하며, "),a("code",[t._v("true")]),t._v(" 또는 "),a("code",[t._v("false")]),t._v("의 값을 지니게 된다.")]),t._v(" "),a("h4",{attrs:{id:"null-타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-타입"}},[t._v("#")]),t._v(" Null 타입")]),t._v(" "),a("p",[a("code",[t._v("Null")]),t._v("은 한 가지 값인 "),a("code",[t._v("null")]),t._v("만을 의미합니다.")]),t._v(" "),a("p",[a("code",[t._v("Null")]),t._v("은 타입인 반면 "),a("code",[t._v("null")]),t._v("은 값을 의미합니다."),a("br"),t._v(" "),a("code",[t._v("Null")]),t._v("은 "),a("a",{attrs:{href:"https://developer.mozilla.org/ko/docs/Glossary/Null",target:"_blank",rel:"noopener noreferrer"}},[t._v("다음"),a("OutboundLink")],1),t._v("을 참조 바랍니다."),a("br"),t._v(" "),a("code",[t._v("null")]),t._v("은 어떤 값이 "),a("strong",[t._v("의도적")]),t._v("으로 비어있음을 표현하며, "),a("code",[t._v("Boolean")]),t._v("연산에서는 "),a("code",[t._v("false")]),t._v("를 뜻합니다.")]),t._v(" "),a("h4",{attrs:{id:"undefined-타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#undefined-타입"}},[t._v("#")]),t._v(" Undefined 타입")]),t._v(" "),a("p",[t._v("값을 할당하지 않은 변수는 "),a("code",[t._v("undefined")]),t._v("값을 지닙니다.")]),t._v(" "),a("p",[a("code",[t._v("Undefined")]),t._v("는 타입이며, "),a("code",[t._v("undefined")]),t._v("는 값입니다.\n선언한 이후, 값을 할당하지 않은 변수 혹은 인수에 자동으로 "),a("code",[t._v("undefined")]),t._v("라는 값이 "),a("code",[t._v("Undefined")]),t._v("라는 타입을 가지고 할당됩니다.")]),t._v(" "),a("h4",{attrs:{id:"number-타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number-타입"}},[t._v("#")]),t._v(" Number 타입")]),t._v(" "),a("h5",{attrs:{id:"부동소수점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#부동소수점"}},[t._v("#")]),t._v(" 부동소수점")]),t._v(" "),a("p",[t._v("ECMAScript 표준에 따르면, 숫자 자료형은 "),a("code",[t._v("배정밀도 64비트 형식 IEEE 754값")]),t._v(" 단 하나만 존재한다.")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("배정밀도 64비트 형식 IEEE 754")]),t._v("는 -(2^53 -1) ~ 2^53 -1 까지 표현한다.")])]),t._v(" "),a("p",[t._v("이는 부동 소수점을 표현할 수 있는 것 말고도, "),a("code",[t._v("Number")]),t._v(" 타입은 세가지 의미있는 몇가지 상징적인 값들도 표현할 수 있다.")]),t._v(" "),a("p",[t._v("이 값에는 "),a("code",[t._v("+/- 무한대")]),t._v(", "),a("code",[t._v("NaN")]),t._v("이 있다.")]),t._v(" "),a("p",[t._v("위의 "),a("code",[t._v("+/- 무한대")]),t._v("보다 크거나 작은지 확인하는 용도의 상수값인 "),a("code",[t._v("Number.MAX_VALUE")]),t._v("를 사용할 수 있다.")]),t._v(" "),a("p",[t._v("또한, ECMAScript 6 부터는 숫자가 배정밀도 부동소수점 숫자인지 확인하는 용도로 다음 세가지가 있다.")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("Number.isSafeInteger()")])]),t._v(" "),a("li",[a("code",[t._v("Number.MAX_SAFE_INTEGER")])]),t._v(" "),a("li",[a("code",[t._v("Number.MIN_SAFE_INTEGER")])])]),t._v(" "),a("p",[t._v("만약 이를 넘어간다면, 그 숫자는 안전하지않다.")]),t._v(" "),a("h5",{attrs:{id:"_0의-특성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0의-특성"}},[t._v("#")]),t._v(" 0의 특성")]),t._v(" "),a("p",[t._v("유일하게 0은 "),a("code",[t._v("-0")]),t._v("이나 "),a("code",[t._v("+0")]),t._v("으로 표시할 수 있다.")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("0")]),t._v("은 "),a("code",[t._v("+0")]),t._v("을 의미한다.")])]),t._v(" "),a("p",[t._v("하지만 이 값은 거의 의미가 없다.\n"),a("code",[t._v("+0 === -0")]),t._v("은 "),a("code",[t._v("true")]),t._v("이다.")]),t._v(" "),a("h5",{attrs:{id:"이진-연산자"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#이진-연산자"}},[t._v("#")]),t._v(" 이진 연산자")]),t._v(" "),a("p",[a("code",[t._v("bit masking")]),t._v("기법으로 한 숫자 안에 여러 Boolean값을 저장하는데에 사용 가능하다."),a("br"),t._v("\n물론 이는 좋지않은 행위지만, JS에서는 Boolean 덩어리(배열이나 객체 같은 형태)를 나타낼 마땅한 다른 방법이 없다.")]),t._v(" "),a("p",[t._v("또한 "),a("code",[t._v("bit masking")]),t._v("은 코드를 관리하는데에 있어서 좀 더 어렵게 만들기도 한다."),a("br"),t._v("\n하지만 이는 저장공간의 절약이나, 비트를 직접 다루는 등의 극단적이며 제한적인 상황에서 필요할 수 있다.")]),t._v(" "),a("blockquote",[a("p",[t._v("따라서 "),a("code",[t._v("bit masking")]),t._v("은 크기를 최대한 줄이는 상황에서만 사용을 고려해야한다.")])]),t._v(" "),a("h4",{attrs:{id:"string-타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-타입"}},[t._v("#")]),t._v(" String 타입")]),t._v(" "),a("p",[a("code",[t._v("String")]),t._v(" 타입은 텍스트 데이터를 나타나는데에 사용한다.")]),t._v(" "),a("p",[t._v("이는 16비트 부호없는 정수 값 요소들의 집합이다.")]),t._v(" "),a("blockquote",[a("p",[t._v("16비트 부호없는 정수는 문자값이랑 1 : 1 치환이 되기 때문이다.")])]),t._v(" "),a("p",[a("code",[t._v("String")]),t._v("은 연속된 인덱스의 형태인데"),a("br"),t._v("\n첫번째 값은 0번 인덱스, 두번째 값은 1번 인덱스 같은 방식이다."),a("br"),t._v("\n그러기에 "),a("code",[t._v("String")]),t._v("의 길이는 "),a("code",[t._v("String")]),t._v("이 가지고 있는 값의 갯수이다.")]),t._v(" "),a("p",[t._v("JS에서의 문자열은 변경 불가능(immutable)합니다.\n이는 문자열이 한번 생성이 된다면, 그 문자열을 수정할 수 없다는 것을 의미합니다."),a("br"),t._v("\n그러나 원래 문자열에서 수정된 다른 문자열을 할당하는 것은 가능합니다.")]),t._v(" "),a("p",[t._v("JS 원시값의 불변성에 대해서 검색해보고 배워보심이 좋습니다."),a("br"),t._v("\n추후 튜토리얼이 끝나고 다른 곳에서 다룰 예정입니다 😄")]),t._v(" "),a("h5",{attrs:{id:"문자열의-자료형화"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#문자열의-자료형화"}},[t._v("#")]),t._v(" 문자열의 자료형화")]),t._v(" "),a("p",[t._v("문자열은 복잡한 자료형을 표현하는 용도로 눈독 들일 수 있습니다."),a("br"),t._v("\n이는 단기적으로 이러한 장점들을 가지고옵니다.")]),t._v(" "),a("ol",[a("li",[t._v("접합 연산자로 손쉽게 복잡한 문자열을 만들 수 있다.")]),t._v(" "),a("li",[t._v("문자열은 화면 출력 내용이 문자열 변수값과 똑같다.(디버깅이 쉽다.)")]),t._v(" "),a("li",[t._v("문자열은 많은 API에서 사용하는 공통분모이며, 그러기에 이로만 작업하는게 유혹적일 수 있다.")])]),t._v(" "),a("p",[t._v("이는 규칙만 잘 정의한다면, 어떤 자료구조든 문자열로 흉내낼 수 있습니다."),a("br"),t._v("\n그러나 이가 좋은 것은 아닌게 구분자로 리스트를 흉내낼 수는 있어도 JS의 배열을 이용하는 것이 더 효율적이라는 것이죠")]),t._v(" "),a("p",[t._v("규칙을 정의하고 사이드이펙트들을 관리하는 것은 불필요한 관리부담을 낳게됩니다.")]),t._v(" "),a("p",[t._v("그러기에 복잡한 데이터를 나타낼 경우에는 문자열을 분석해서 적합하게 자료구조를 이용하는 것이 좋습니다.")]),t._v(" "),a("h4",{attrs:{id:"symbol-타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-타입"}},[t._v("#")]),t._v(" Symbol 타입")]),t._v(" "),a("p",[t._v("이 타입은 ECMAScript 6 에서 추가되었습니다."),a("br"),t._v("\nSymbol은 "),a("strong",[t._v("유일")]),t._v("하고 "),a("strong",[t._v("변경 불가능한(immutable)")]),t._v(" 원시값(primitive value)입니다."),a("br"),t._v("\n또한 객체 속성의 "),a("code",[t._v("key")]),t._v(" 값으로 이용될 수 있습니다.")]),t._v(" "),a("p",[t._v("이 타입은 주로 이름의 충돌 위험이 없는 "),a("strong",[t._v("유일한")]),t._v(" 객체의 프로퍼티 키를 만들기 위해 사용합니다.")]),t._v(" "),a("p",[t._v("심볼은 생성하기 위해 "),a("code",[t._v("new")]),t._v("키워드를 사용하지 않고, "),a("code",[t._v("Symbol()")]),t._v("함수로 생성합니다."),a("br"),t._v("\n이는 호출될 때마다 "),a("code",[t._v("Symbol")]),t._v("값을 생성하며, 이때 생성된 값은 객체가 아닌, 기본값으로써 생성됩니다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" symbol1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" symbol2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" symbol3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("symbol1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// expected output: "Symbol()"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" symbol1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// expected output: "symbol"')]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("symbol2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// expected output: false")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("symbol3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// expected output: "Symbol(foo)"')]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// expected output: false")]),t._v("\n")])])]),a("p",[t._v("또한 "),a("code",[t._v("Symbol()")]),t._v(" 함수에 이용된 문자열 인자값은 그저 "),a("code",[t._v("Symbol")]),t._v("에 대한 설명(description)으로 디버깅 용도로만 이용됩니다.")]),t._v(" "),a("h5",{attrs:{id:"symbol의-이용"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol의-이용"}},[t._v("#")]),t._v(" Symbol의 이용")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"첫번째 프로퍼티"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"first"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// obj.456 = 789; // Uncaught SyntaxError: Unexpected number")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// expected output : {123: 123, first: "첫번째 프로퍼티", first123: true}')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "첫번째 프로퍼티"')]),t._v("\n")])])]),a("p",[t._v("다음처럼 객체의 프로퍼티 키는 빈 문자열을 포함하는 모든 문자열로 만들 수 있습니다.")]),t._v(" "),a("p",[t._v("또한 다음처럼 Symbol을 이용하여 객체의 프로퍼티 키로 사용가능합니다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" keySymbol "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keys"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keySymbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {Symbol(keys): 123}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keySymbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n")])])]),a("h4",{attrs:{id:"symbol-객체"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-객체"}},[t._v("#")]),t._v(" Symbol 객체")]),t._v(" "),a("p",[a("code",[t._v("Symbol()")]),t._v("은 함수객체의 형태입니다. 그러기에 여러 프로퍼티와 메서드를 지니고 있죠")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/64676070/129447049-a5ec5288-70cf-4e40-8b5b-0fe8695c672e.png",alt:"image"}})]),t._v(" "),a("p",[t._v("이 수많은 프로퍼티와 메서드들 중 "),a("code",[t._v("length")]),t._v("와 "),a("code",[t._v("prototype")]),t._v("을 제외한 프로퍼티를 "),a("code",[t._v("Well-Known Symbol")]),t._v("이라고 부릅니다.")]),t._v(" "),a("h3",{attrs:{id:"object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[t._v("#")]),t._v(" Object")]),t._v(" "),a("p",[t._v("컴퓨터 과학에서는 이를 "),a("code",[t._v("식별자로 참조할 수 있는 메모리에 있는 값")]),t._v("이라고 부른다.")]),t._v(" "),a("blockquote",[a("p",[t._v("식별자는 코드 내의 변수, 함수, 혹은 속성을 식별하는 문자열입니다.")])]),t._v(" "),a("h4",{attrs:{id:"형태"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#형태"}},[t._v("#")]),t._v(" 형태")]),t._v(" "),a("p",[t._v("JS에서는 다음과 같은 형태를 지닙니다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" object1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" bar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"속성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#속성"}},[t._v("#")]),t._v(" 속성")]),t._v(" "),a("p",[t._v("JS에서, 객체(Object)는 속성들을 담고 있는 "),a("code",[t._v("collection")]),t._v("으로 볼 수 있습니다. 그러기에 위에서 본 형태랑 비슷한거죠")]),t._v(" "),a("p",[t._v("이는 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#object_literals",target:"_blank",rel:"noopener noreferrer"}},[t._v("객체 리터럴 문법"),a("OutboundLink")],1),t._v("으로 객체의 속성에 대해 여러 기능을 사용가능합니다.")]),t._v(" "),a("blockquote",[a("p",[t._v("초기화, 추가, 제거 등")])]),t._v(" "),a("p",[t._v("또한 이 객체의 속성들은 어떠한 자료형이든 될 수 있습니다. 심지어 객체를 포함해서 말이죠.")]),t._v(" "),a("p",[t._v("그 덕에 복잡한 데이터 구조를 형성하는게 가능해집니다."),a("br"),t._v("\n그리고 이러한 속성들을 구분하는 것이 바로 "),a("code",[t._v("key")]),t._v("입니다.")]),t._v(" "),a("p",[t._v("이 "),a("code",[t._v("key")]),t._v("는 값이 "),a("code",[t._v("String")]),t._v("이거나 "),a("code",[t._v("Symbol")]),t._v("입니다.")]),t._v(" "),a("p",[t._v("또한 두 조율의 객체 속성이 있는데, 이들은 종류에 따라 특정 값을 지닐 수 있습니다.")]),t._v(" "),a("blockquote",[a("p",[t._v("데이터 속성과 접근자 속성이 여기에 해당합니다.")])]),t._v(" "),a("h5",{attrs:{id:"데이터-속성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#데이터-속성"}},[t._v("#")]),t._v(" 데이터 속성")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("특성(Attribute)")]),t._v(" "),a("th",[t._v("자료형")]),t._v(" "),a("th",[t._v("설명")]),t._v(" "),a("th",[t._v("기본값")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("[[Value]]")]),t._v(" "),a("td",[t._v("JavaScript 타입 모두 가능")]),t._v(" "),a("td",[t._v("이 속성에 대한 get 접근으로 반환되는 값")]),t._v(" "),a("td",[t._v("undefined")])]),t._v(" "),a("tr",[a("td",[t._v("[[Writable]]")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("false라면, 이 속성의 [[Value]]을 바꿀 수 없다.")]),t._v(" "),a("td",[t._v("false")])]),t._v(" "),a("tr",[a("td",[t._v("[[Enumerable]]")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("true라면, 이 속성은 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in",target:"_blank",rel:"noopener noreferrer"}},[t._v("for...in"),a("OutboundLink")],1),t._v(" 루프에서 열거 가능")]),t._v(" "),a("td",[t._v("false")])]),t._v(" "),a("tr",[a("td",[t._v("[[Configurable]]")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("false라면, 이 속성은 제거 불가, [[Value]]와 [[Writable]] 외에는 수정 불가")]),t._v(" "),a("td",[t._v("false")])])])]),t._v(" "),a("h5",{attrs:{id:"접근자-속성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#접근자-속성"}},[t._v("#")]),t._v(" 접근자 속성")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("특성(Attribute)")]),t._v(" "),a("th",[t._v("자료형")]),t._v(" "),a("th",[t._v("설명")]),t._v(" "),a("th",[t._v("기본값")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("[[Get]]")]),t._v(" "),a("td",[t._v("Function 객체 혹은 undefined")]),t._v(" "),a("td",[t._v("이 속성의 값에 접근 시 인자 목록 없이 함수 호출, 함수의 리턴값으로 속성값을 가져온다.")]),t._v(" "),a("td",[t._v("undefined")])]),t._v(" "),a("tr",[a("td",[t._v("[[Set]]")]),t._v(" "),a("td",[t._v("Function 객체 혹은 undefined")]),t._v(" "),a("td",[t._v("이 속성의 값이 교체될 시, 먼저 할당된 값을 인자로 함수가 호출된다.")]),t._v(" "),a("td",[t._v("undefined")])]),t._v(" "),a("tr",[a("td",[t._v("[[Enumerable]]")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("true라면, 이 속성은 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in",target:"_blank",rel:"noopener noreferrer"}},[t._v("for...in"),a("OutboundLink")],1),t._v(" 루프에서 열거 가능")]),t._v(" "),a("td",[t._v("false")])]),t._v(" "),a("tr",[a("td",[t._v("[[Configurable]]")]),t._v(" "),a("td",[t._v("false라면, 이 속성은 제거 불가, 데이터 속성 수정 불가")]),t._v(" "),a("td",[t._v("false")]),t._v(" "),a("td")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);